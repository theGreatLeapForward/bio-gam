import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import background from "/public/background.jpeg"
import {useState} from "react";

const inter = Inter({ subsets: ['latin'] })

function PopDisplay ({pop}) {
    return (
        <div>
            <a className={styles.slider}>
                {pop}
            </a>
        </div>
    )
}

class opt {
    constructor(txt, mod, ani) {
        this.txt = txt
        this.mod = mod
        this.ani = ani
    }
}

class choice {
    constructor(options, txt) {
        this.options = options
        this.txt = txt
    }
}

const choices = [
    new choice([
        new opt("win", 1, "bears"),
        new opt("lose", 0, "bears")
        ],
        "wanna win"),
    new choice([
        new opt("among", 1, "bears"),
        new opt("die", 0, "bears")
    ],
        "todo")
]

function Choice({pops, popUpdater}) {
    const [idx, setIdx] = useState(0);
    if (idx >= choices.length) {
        setIdx(0);
    }
    return (
        <div>
            <h2>
                {choices[idx].txt}
            </h2>

            {Object.entries(choices[idx].options).map((opt) => {
                if (typeof opt === undefined) {
                    throw undefined;
                }

                return (
                    <div key={opt.txt + "opt"}>
                        <p>
                            {pops[opt.ani]}
                        </p>

                        <button key={opt.txt + "btn"} onClick={() => {
                            let newpop = Object.create(pops);
                            newpop[opt.ani] = newpop[opt.ani] * opt.mod;
                            popUpdater(newpop);

                            setIdx(idx + 1);
                            }
                        }>{opt.txt}</button>
                    </div>
                )
            })}
        </div>
    )
}

function Menus({ingame, updater}) {
    const [poplevels, setPoplevels] = useState({bears: 3});

    return ingame ? (
        <div>
          <div>
            {Object.entries(poplevels).map((x) =>
                <PopDisplay key={x.key} pop={x}/>
            )}
          </div>
          <Choice popUpdater={setPoplevels} pops={poplevels}/>
        </div>
    ) : (
        <div>
            <button onClick={updater}>PLAY</button>
        </div>
    )
}

function Background({ingame}) {
    return (
        <div className={ingame ? styles.ingame_back : styles.back}>
            <Image
                src={background}
                alt="background"
            />
        </div>
    )
}

export default function Home() {

    const [ingame, set_ingame] = useState(false);

    function updater() {
        set_ingame(!ingame);
    }

  return (
    <>
       <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
       <main className={styles.main}>
        <div className={styles.background}>
          <Background ingame={ingame}/>
        </div>
        <div>
            <Menus ingame={ingame} updater={updater}/>
        </div>
      </main>
    </>
  )
}
